##### TEMPLATE TRAVIS CI YAML SCRIPT
##### Dominic Palmer
#####
#####
##### The matrix can be multiplied in advance, or declared explicitly. This template uses 
##### multiplications, but the alternative is to use global parameters where possible, and 
##### declare build specific details within:
##### matrix: 
#####   include:
##### 
##### This template is created using a medley of different parameters and should be altered
##### before use.


# ------------------------------- MATRIX SETUP -------------------------------
# [Optional] Specify if superuser required. Options: true, false, required, enabled
sudo: required

# Language(s)
language: 
  - node_js
  - cpp
  - c++
  - c
  - java
  - javascript
  - node
  - node.js
  - node_js
  - nodejs
  - python
  - shell

# [Optional] Specify language options/versions, if any. Multiplies the matrix
node_js:
  - '0.13'
  - '0.14'

# Specify the operating system(s) to use. Multiplies the matrix
os: 
  - linux
  - osx
  - windows

# [Optional] Specify the distribution(s) to use, if any. Multiplies the matrix
dist: 
  - xenial
  - trusty
  - precise
  - bionic
  - focal

# [Optional] Specify the compiler(s) to use, if any. Multiplies the matrix
compiler:
  - g++
  - clang
  - gcc

# [Optional] Set up notifications to be sent out
notifications: 
  email:
    recipients:
      - a@a_domain.com
      - b@b_domain.com

    # Send notifications depending on outcome. Options: change, always, never 
    on_success: change # change means an alteration of the current repo status
    on_failure: always

  # Other notification channels
  slack:
  webhooks:
  irc:
  campfire:
  flowdock:
  hipchat:

# [Optional] 'To install packages not included in the default container-based-infrastructure you 
# need to use the APT addon, as sudo apt-get is not available'. This applies globally.
addons:
  apt:
    # Package sources
    sources:
      - ['ubuntu-toolchain-r-test']
    # Packages to install
    packages:
      - ['g++-8', 'g++-8-multilib', 'g++-multilib', 'valgrind', 'expect', 'curl']

# [Optional] Declare environment variables
env:
  # Global variables are fixed for all matrix combinations
  global:
    - ENV_VAR=abcdefg
  # Matrix variables multiply the matrix
  matrix:
    - DB=prodDB
    - DB=testDB

# [Optional] Enable services such as databases. Multiplies the matrix
services:
  - mongodb
  - rabbitmq

# [Optional] Configure which branches of the repo to run. If branches isn't specified,
# master will be used by default.
branches:
  # Include list. Multiplies the matrix
  only:
    - master
    - /^branch-.*$/ # Can use regex to declare branches
  # Exclude list
  except: 
    - unused_branch # Exclude specific branches

# [Optional] Explicitly exclude combinations (jobs) created by matrix multiplication, or include new ones
jobs:
  include:
    - node_js: '0.15'
  exclude:
    - node_js: '0.13'


# ------------------------------- BUILD -------------------------------
# [Optional] Processing prior to installing dependencies
before_install:
  - sudo apt-get update

# [Optional] Install dependencies for the build
install:
  - sudo apt install python3-pip

# [Optional] Processing prior to running build script
before_script:
  - cd src

# Shell script that carries out builds. This will run for every combination in the matrix
script:
  - make clean
  - make

# [Optional] Processing prior to caching
before_cache:
  - echo before_cache

# [Optional] 'Cache content that doesn't often change, to speed up the build process'
cache:
  directories:
      - dir_one
      - dir_two

# [Optional] Processing upon build success
after_success:
  - BUILDCOMPLETE = true

# [Optional] Processing upon build failure
after_failure:
  - BUILDCOMPLETE = false


# ------------------------------- DEPLOYMENT -------------------------------
# [Optional] Admin processing prior to deployment
before_deploy:
- echo Starting deployment process

# [Optional] Deployment process
deploy:
  # Prevent Travis from resetting your working directory (deleting changes, etc.)
  skip_cleanup: true 

  # Specify the deployment provider
  provider: releases

  # Provider options
  api_key:
    secure: api_key1234123412341234
  api_token:
    secure: api_token12341234123412
  email: provider@email.com

  # Deployment
  on:
    condition: $BUILDCOMPLETE = true # Condition for deployment
    repo: username/reponame # Repo to deploy to
    all_branches: true # Whether or not to deploy to all branches
    branch: 
      - master # Alternatively, specify branches to deploy to
      - different_branch
    tags: true # Git tags

# For any additional work after deployment
after_deploy:
  - echo Done