" Clear existing maps on load
mapclear

" --------------------- Settings
set scrolloff=8
set visualbell
set ignorecase
set smartcase
set timeoutlen=400
set whichwrap=<,>,h,l
set clipboard=unnamed
set hlsearch
set noshowcmd
set ideavimsupport+=singleline

sethandler <C-y> a:ide
sethandler <C-o> a:ide
sethandler <C-a> a:ide
sethandler <C-s> a:ide
sethandler <C-f> a:ide
sethandler <C-h> a:ide
sethandler <C-k> a:ide
sethandler <C-;> a:ide
sethandler <C-z> a:ide
sethandler <C-x> a:ide
sethandler <C-c> a:ide
sethandler <C-v> a:ide
sethandler <C-n> a:ide
sethandler <C-m> a:ide

" --------------------- Plugins
Plug 'tpope/vim-surround'

" --------------------- Keybindings
let mapleader = " "

function! Noremap(lhs, rhs)
  " Using live templates will force Vim into select mode, where select mode
  " remaps then take precedence over raw input. Avoid by redefining noremap to
  " exclude the select mode remap.
  exe 'nnoremap ' . a:lhs . ' ' . a:rhs
  exe 'xnoremap ' . a:lhs . ' ' . a:rhs
  exe 'onoremap ' . a:lhs . ' ' . a:rhs
endfunction

" Movement

call Noremap('f', 'b')
call Noremap('F', 'B')
call Noremap('H', '^')
call Noremap('J', '}')
call Noremap('K', '{')
call Noremap('L', '$')
call Noremap('M', 'J')
call Noremap('\', ':action MoveLineDown<CR>')
call Noremap('/', ':action MoveLineUp<CR>')
nnoremap , mz>>'z
xnoremap , >gv
nnoremap z mz<<'z
xnoremap z <gv

" Search
call Noremap(';', '/')
call Noremap(':', '?')
nnoremap g; viwy/<C-r>0
xnoremap g; y/<C-r>0
call Noremap('@', ':')
nnoremap <Esc> :nohl<CR>

" Text modification
call Noremap('t', 'y')
nnoremap T y$
nnoremap r p:action AutoIndentLines<CR>
xnoremap r P:action AutoIndentLines<CR>
call Noremap('R', 'P:action AutoIndentLines<CR>')
call Noremap('x', 's')
call Noremap('s', '"0x')
call Noremap('S', '"0D')
call Noremap('m', 'r')
call Noremap('b', '<C-v>')
nnoremap ' ~h
xnoremap ' ~
nnoremap <CR> o<Esc>
nnoremap <S-CR> O<Esc>
nnoremap u u<Esc>
xnoremap u <Esc>u<Esc>
nnoremap U <C-r><C-r>

" g commands
call Noremap('gh', ':action QuickJavaDoc<CR>')
call Noremap('gj', ':action GotoDeclaration<CR>')
call Noremap('gk', ':action GotoImplementation<CR>')
call Noremap('gl', ':action FindUsages<CR>')
call Noremap('gi', ':action OptimizeImports<CR>')
call Noremap('go', ':action ReformatCode<CR>')

" Alt commands
noremap <A-j> <C-f>
noremap <A-k> <C-b>
nnoremap <A-;> viw:action Replace<CR>
xnoremap <A-;> <Esc> :action Replace<CR>
noremap <A-u> :action Back<CR>
noremap <A-i> :action Forward<CR>

" Leader commands
call Noremap('<leader>;', ':action SearchEverywhere<CR>')
call Noremap('<leader>o', ':action GotoFile<CR>')
nnoremap <leader>n viw:action FindInPath<CR>
xnoremap <leader>n :action FindInPath<CR>
nnoremap <leader>m viw:action ReplaceInPath<CR>
xnoremap <leader>m :action ReplaceInPath<CR>
onoremap <leader>m viw:action ReplaceInPath<CR>

call Noremap('<leader>r', ':action RenameElement<CR>')
call Noremap("<leader>'", ":action CommentByLineComment<CR>")
xnoremap <leader>s :action SurroundWith<CR>
xnoremap <leader>e :action ExtractMethod<CR>
call Noremap('<leader>d', ':action SelectIn<CR>')
call Noremap('<leader>f', ':action RevealIn<CR>')
call Noremap('<leader>b', ':action Annotate<CR>')
call Noremap('<leader>w', ':w<CR>')
call Noremap('<leader><leader>w', ':wa<CR>')
call Noremap('<leader>q', ':q<CR>')
call Noremap('<leader><leader>q', ':qa<CR>')
call Noremap('<leader>u', ':action GotoNextError<CR>')
call Noremap('<leader>i', ':action GotoPreviousError<CR>')

call Noremap('<leader>h', '<C-w>w')
call Noremap('<leader>j', '<C-w>w')
call Noremap('<leader>k', '<C-w>w')
call Noremap('<leader>l', '<C-w>w')
call Noremap('<leader>v', ':vsplit<CR>')
call Noremap('<leader>c', ':split<CR>')
call Noremap('<leader>1', ':action GoToTab1<CR>')
call Noremap('<leader>2', ':action GoToTab2<CR>')
call Noremap('<leader>3', ':action GoToTab3<CR>')
call Noremap('<leader>4', ':action GoToTab4<CR>')
call Noremap('<leader>5', ':action GoToTab5<CR>')
call Noremap('<leader>6', ':action GoToTab6<CR>')
call Noremap('<leader>7', ':action GoToTab7<CR>')
call Noremap('<leader>8', ':action GoToTab8<CR>')
call Noremap('<leader>9', ':action GoToTab9<CR>')

" Other commands
call Noremap('9', ':action RiderShowValueOrigin<CR>')
call Noremap('0', ':action RiderShowValueDestination<CR>')
call Noremap('p', ':action PinActiveEditorTab<CR>')
call Noremap('<leader><leader>r', ':so ~\.ideavimrc<CR>l')

" Inner shortcuts
nnoremap c" ci"
nnoremap c' ci'
nnoremap c( 0f(ci(
nnoremap c) 0f)ci)
nnoremap c{ ci{
nnoremap c} ci}
nnoremap c[ 0f[ci[
nnoremap c] 0f]ci]
nnoremap ct cit
nnoremap c< ci<
nnoremap c> ci>

nnoremap d" di"
nnoremap d' di'
nnoremap d( 0f(di(
nnoremap d) 0f)di)
nnoremap d{ di{
nnoremap d} di}
nnoremap d[ 0f[di[
nnoremap d] 0f]di]
nnoremap dt dit
nnoremap d< di<
nnoremap d> di>

nnoremap v" vi"
nnoremap v' vi'
nnoremap v( 0f(vi(
nnoremap v) 0f)vi)
nnoremap v{ vi{
nnoremap v} vi}
nnoremap v[ 0f[vi[
nnoremap v] 0f]vi]
nnoremap v< vi<
nnoremap v> vi>

nnoremap t" yi"
nnoremap t' yi'
nnoremap t( mz0f(yi(`z
nnoremap t) mz0f)yi)`z
nnoremap t{ yi{
nnoremap t} yi}
nnoremap t[ mz0f[yi[`z
nnoremap t] mz0f]yi]`z
nnoremap t< yi<
nnoremap t> yi>

" Clear search highlights on load
:nohl
