1. SophiaScript
  a) Download the SophiaScript wrapper and library zips from
  https://github.com/farag2/Sophia-Script-for-Windows, then extract.
  b) Take windows/debloat/custom_sophia_preset.ps1 from dotfiles. Copy it and
  place in the extracted wrapper folder alongside the default.
  b) Open up the script wrapper and import the custom preset.
  c) Go to 'Output Console' and run the script. As it runs, choose options from
  terminal as appropriate.
  d) Restart.

2. Windows10Debloater
  a) Copy script contents from
  https://github.com/Sycnex/Windows10Debloater/blob/master/Windows10Debloater.ps1
  b) Run 'Set-ExecutionPolicy Unrestricted -Force', then run the script.
  c) Delete C:/Temp/Windows10Debloater, so Sophia Script can be re-run later.

3. Privatezilla
  a) Download UI app from https://github.com/builtbybel/privatezilla/releases/
  b) Run it, click analyze to see what you currently have in place.
  c) Select desired options, then click 'Apply selected' to make new changes.
  Note that all red fields are changed to their opposite value.

4. Bloatbox
  a) Download from https://github.com/builtbybel/bloatbox/releases
  b) Run it and verify that no bloatware apps are present.
  c) Check the repos 'marketplace' scripts. Download 'Block telemetry.ps1'.
  d) Open the script locally and remove references to 'force-mkdir'. The HKLM
  registry assignment at the start will work without the force-mkdir call. Also
  comment out the 'causes problems with Microsoft Store' IP at the bottom.
  e) Run the script locally as admin.

5. Install Nvidia Control Panel and Ubuntu LTS from Microsoft Store. They may
have been deleted somewhere during the debloat process.

6. Full walkthrough of settings, to validate privacy changes during debloat
  a) Standard UI
  b) Settings GUI
  c) Control panel
  d) Show File Explorer window border via settings GUI 'Themes/Colours' then
  'Title bars and window borders'.

7. Web installations
  - Powershell 7. Install PSReadLine v2.1.0 over the top via
  'Install-Module -Name PSReadLine -RequiredVersion 2.1.0 -AllowPreRelease',
  then delete the bundled version from
  $HOME\Documents\PowerShell\Modules\PSReadLine)
  - SQLSearch (https://www.red-gate.com/products/sql-development/sql-search/installer/)
  - Redis Insight (https://redis.com/redis-enterprise/redis-insight/)
  - AutoHotKey
  - SysInternals (Extract and place in Program Files)
  - Nvidia Graphics Driver
  - KeePass 2
  - Jekyll (https://jekyllrb.com/docs/installation/windows/) via WSL route.
  Before running 'gem update', run 'export GEM_HOME="$HOME/.gem"'.
  - EA Origin

8. Install 'App Installer' (winget) from Microsoft Store.

9. Winget installations via 'winget install -e --id <name>'
  - Mozilla.Firefox
  - Mozilla.Thunderbird
  - wez.wezterm
  - Git.Git (Copy common/git/.gitconfig to $HOME with email updated. Run
  'ssh-keygen' to create a key, then configure it in GitHub.)
  - Notepad++.Notepad++ (Set default app for .txt files to Notepad++, change
  Notepad++ backup settings to never create backup files.)
  - Microsoft.VisualStudioCode
  - JetBrains.Rider
  - Microsoft.VisualStudio.2022.Community
  - Microsoft.SQLServer.2019.Express (also installs Microsoft.AzureDataStudio)
  - Microsoft.SQLServerManagementStudio
  - PostgreSQL.PostgreSQL
  - Python.Python.3
  - Docker.DockerDesktop
  - Postman.Postman
  - Microsoft.PowerToys (Turn off 'Awake', change 'Run' shortcut to use
  Win+Space, clear the previous query on launch, and don't make URL or web
  queries without activation key)
  - voidtools.Everything
  - dnGrep.dnGrep
  - gerardog.gsudo
  - NickeManarin.ScreenToGif
  - ChristianSchenk.MiKTeX
  - TeXstudio.TeXstudio
  - TranslucentTB (Run it once installed, and set all options to 'clear')
  - Spotify.Spotify
  - VideoLAN.VLC
  - DuongDieuPhap.ImageGlass
  - KDE.Krita
  - IDRIX.VeraCrypt
  - TheDocumentFoundation.LibreOffice
  - Valve.Steam
  - Ubisoft.Connect

10. Node
  a) Install nvm (https://github.com/coreybutler/nvm-windows/releases)
  b) Run 'nvm list available' and 'node install <latest LTS from list results>'.
  c) Set the default version with 'nvm use <version you have just installed>'.

11. Configure startup apps via settings.

12. Turn off protected folder access.

13. Restart.

14. Transfer root or clone dotfiles.

15. Dotfiles
  a) In an elevated PowerShell session, run dotfiles_var.ps1 with the path to
  the dotfiles directory passed as an argument.
  b) Run Windows dotfiles install scripts in turn. If the $Dotfiles environment
  variable isn't set yet, set it temporarily.

16. WSL
  a) In RegEdit, go to
  Computer\HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Lxss
  and open the folder labelled with a guid. If the 'DistributionName' key is
  using a format like 'Ubuntu20.04LTS', change it to 'Ubuntu-20.04'.
  b) Run EnableVirtualMachinePlatform.ps1 as admin from dotfiles.
  c) Add WSL directories to quick access. The WSL root directory can be accessed
  in File Explorer via '\\wsl$'.
  c) Restart to allow Windows to enable WSL2, then run
  'wsl --set-default-version 2' and 'wsl --set-version Ubuntu-20.04 2'.
  d) Open a bash prompt in Wezterm. Navigate to ~ and run
  '/mnc/c/Users/<user>/root/cs/projects/dotfiles/windows/wsl_install.sh'. This
  installs software in WSL and adds symbolic links to the Windows dotfiles repo.

17. Install the Ubuntu Mono Nerd Font from dotfiles.

18. Sign into all accounts and services. Setup VSCode settings sync and import
Rider setings.

19. Activate Windows license.
