[
  // Vim menu navigation (quick open, command palette, tasks, autocompletion)
  { "key": "ctrl+j", "command": "workbench.action.quickOpenSelectNext" },
  { "key": "ctrl+k", "command": "workbench.action.quickOpenSelectPrevious" },
  { "key": "ctrl+j", "command": "selectNextSuggestion", "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus" },
  { "key": "ctrl+k", "command": "selectPrevSuggestion", "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus" },
  { "key": "ctrl+j", "command": "history.showNext", "when": "historyNavigationBackwardsEnabled && historyNavigationWidget && !suggestWidgetVisible" },
  { "key": "ctrl+k", "command": "history.showPrevious", "when": "historyNavigationBackwardsEnabled && historyNavigationWidget && !suggestWidgetVisible" },
  { "key": "ctrl+j", "command": "interactive.history.next", "when": "!suggestWidgetVisible && resourceScheme == 'vscode-interactive' && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'" },
  { "key": "ctrl+k", "command": "interactive.history.previous", "when": "!suggestWidgetVisible && resourceScheme == 'vscode-interactive' && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'" },
  { "key": "ctrl+j", "command": "list.focusDown", "when": "listFocus && !inputFocus" },
  { "key": "ctrl+k", "command": "list.focusUp", "when": "listFocus && !inputFocus" },
  { "key": "ctrl+j", "command": "notifications.focusNextToast", "when": "notificationFocus && notificationToastsVisible" },
  { "key": "ctrl+k", "command": "notifications.focusPreviousToast", "when": "notificationFocus && notificationToastsVisible" },
  { "key": "ctrl+j", "command": "scm.viewNextCommit", "when": "scmInputIsInFirstPosition && scmRepository && !suggestWidgetVisible" },
  { "key": "ctrl+k", "command": "scm.viewPreviousCommit", "when": "scmInputIsInFirstPosition && scmRepository && !suggestWidgetVisible" },
  { "key": "ctrl+j", "command": "showNextParameterHint", "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible" },
  { "key": "ctrl+k", "command": "showPrevParameterHint", "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible" },
  { "key": "ctrl+j", "command": "workbench.action.interactivePlayground.arrowDown", "when": "interactivePlaygroundFocus && !editorTextFocus" },
  { "key": "ctrl+k", "command": "workbench.action.interactivePlayground.arrowUp", "when": "interactivePlaygroundFocus && !editorTextFocus" },
  { "key": "ctrl+j", "command": "workbench.banner.focusNextAction", "when": "bannerFocused" },
  { "key": "ctrl+k", "command": "workbench.banner.focusPreviousAction", "when": "bannerFocused" },
  { "key": "ctrl+j", "command": "workbench.statusBar.focusNext", "when": "statusBarFocused" },
  { "key": "ctrl+k", "command": "workbench.statusBar.focusPrevious", "when": "statusBarFocused" },

  // Ctrl based menu shortcuts
  { "key": "ctrl+o", "command": "workbench.action.quickOpen", "when": "!editorIsOpen" },
  { "key": "ctrl+;", "command": "workbench.action.showCommands" },

  // Ctrl based tab shifting
  { "key": "ctrl+1", "command": "-workbench.action.focusFirstEditorGroup" },
  { "key": "ctrl+2", "command": "-workbench.action.focusSecondEditorGroup" },
  { "key": "ctrl+3", "command": "-workbench.action.focusThirdEditorGroup" },
  { "key": "ctrl+4", "command": "-workbench.action.focusFourthEditorGroup" },
  { "key": "ctrl+5", "command": "-workbench.action.focusFifthEditorGroup" },
  { "key": "ctrl+6", "command": "-workbench.action.focusSixthEditorGroup" },
  { "key": "ctrl+7", "command": "-workbench.action.focusSeventhEditorGroup" },
  { "key": "ctrl+8", "command": "-workbench.action.focusEighthEditorGroup" },
  { "key": "ctrl+9", "command": "-workbench.action.lastEditorInGroup" },

  { "key": "ctrl+1", "command": "workbench.action.openEditorAtIndex1" },
  { "key": "ctrl+2", "command": "workbench.action.openEditorAtIndex2" },
  { "key": "ctrl+3", "command": "workbench.action.openEditorAtIndex3" },
  { "key": "ctrl+4", "command": "workbench.action.openEditorAtIndex4" },
  { "key": "ctrl+5", "command": "workbench.action.openEditorAtIndex5" },
  { "key": "ctrl+6", "command": "workbench.action.openEditorAtIndex6" },
  { "key": "ctrl+7", "command": "workbench.action.openEditorAtIndex7" },
  { "key": "ctrl+8", "command": "workbench.action.openEditorAtIndex8" },
  { "key": "ctrl+9", "command": "workbench.action.openEditorAtIndex9" },
  { "key": "ctrl+0", "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup" },
  { "key": "ctrl+0", "command": "workbench.action.quickOpenNavigateNextInEditorPicker", "when": "inEditorsPicker && inQuickOpen" },

  // Ctrl based sidebar and panel toggles
  { "key": "ctrl+f", "command": "workbench.action.togglePanel" },
  { "key": "ctrl+d", "command": "workbench.action.toggleSidebarVisibility" },

  // Sidebar and panel focus shifting
  { "key": "ctrl+l", "command": "workbench.action.focusActiveEditorGroup", "when": "sideBarFocus && editorIsOpen" },
  { "key": "escape", "command": "workbench.action.focusActiveEditorGroup", "when": "sideBarFocus && editorIsOpen" },

  { "key": "ctrl+h", "command": "-editor.action.startFindReplaceAction", "when": "editorFocus || editorIsOpen" },
  { "key": "ctrl+h", "command": "workbench.action.focusActiveEditorGroup", "when": "editorIsOpen && focusedView == 'workbench.panel.markers.view'" },
  { "key": "escape", "command": "workbench.action.focusActiveEditorGroup", "when": "editorIsOpen && focusedView == 'workbench.panel.markers.view'" },

  // Use ctrl+q in place of ctrl+w as a backup for <leader>q, with ctrl+shift+q to close VSCode entirely
  { "key": "ctrl+q", "command": "workbench.action.closeActiveEditor" },
  { "key": "ctrl+q", "command": "-workbench.action.quit" },
  { "key": "ctrl+shift+q", "command": "workbench.action.quit" },

  // Workaround for the fact that you can't remap <C-z> directly through VSCodeVim settings
  { "key": "ctrl+z", "command": "vim.remap", "when": "inputFocus && vim.mode == 'Normal'", "args": { "after": ["u"] } },

  // Move focus to the integrated terminal
  { "key": "ctrl+`", "command": "workbench.action.terminal.focus", "when": "!terminalFocus" },
]
